{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE7B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACC,mCACC,sBAAMC,SAZa,SAAAC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAe,MAOf,SACC,uBACCO,KAAO,OACPC,MAAUT,EACVU,SApBsB,SAAAP,GACzBF,EAAeE,EAAEQ,OAAOF,e,+BCPbG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGhBC,EAHgB,iDAGiCC,UAAWH,GAH5C,+DAKHI,MAAOF,GALJ,cAKhBG,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZd,kBAgBfM,GAhBe,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAInC,OACC,sBAAKc,UAAY,6CAAjB,UACC,qBACCC,IAAQf,EACRgB,IAAQN,IAET,4BAAKA,QCNKO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGzB,ECN2B,SAAEA,GAE7B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAW,WAEVxB,EAASC,GACPwB,MAAM,SAAAC,GACNH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAIV,CAAEpB,IASEqB,EDpBwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAOpB,OACC,qCACE,oBAAIJ,UAAY,wCAAhB,SAA0DhB,IAEzDoB,GAAW,mBAAGJ,UAAY,oCAAf,qBAEb,qBAAKA,UAAY,WAAjB,SAEEH,EAAOJ,KAAK,SAAAC,GAAG,OACd,cAAC,EAAD,eAEMA,GADGA,EAAIC,aEMJgB,EA5BM,WAEpB,MAAoCzC,mBAAS,CAAC,aAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAKA,OACC,qCACC,0DACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEE2C,EAAWnB,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAECA,SAAaA,GADLA,Y,MCdf6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0935117e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const CategoryAdd = ({ setCategories }) => {\n\t\n\tconst [inputValue, setInputValue] = useState( '' ); \n\n\tconst handleInputChange = e => {\n\t\tsetInputValue( e.target.value );\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif ( inputValue.trim().length > 2 ) {\n\t\t\tsetCategories( catgs => [inputValue, ...catgs] );\n\t\t\tsetInputValue( '' );\n\t\t}\n\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit = { handleSubmit } >\n\t\t\t\t<input \n\t\t\t\t\ttype = 'text'\n\t\t\t\t\tvalue = { inputValue }\n\t\t\t\t\tonChange = { handleInputChange }\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</>\n\t)\n\n};\n\nCategoryAdd.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n};\n","\nexport const getGifs = async ( category ) => {\n\n\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=15&api_key=ItGBgUjdGCDjqypnGmnkcrSP5KoTq20f`;\n\n\tconst resp = await fetch( url );\n\tconst { data } = await resp.json();\n\t\n\tconst gifs = data.map( img => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t}\n\t});\n\n\treturn gifs;\n\t\n};\n","import React from 'react'\n\nexport const GifGridItem = ({title, url }) => {\n\t \n\t//console.log( id, title, url );\n\n\treturn (\n\t\t<div className = \"card animate__animated animate__fadeInLeft\">\n\t\t\t<img \n\t\t\t\tsrc = { url }\n\t\t\t\talt = { title } \n\t\t\t/>\n\t\t\t<p>{ title }</p>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n//import React, { useState, useEffect } from 'react';\n//import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\t// const [images, setImages] = useState([]);\n\tconst {data:images, loading} = useFetchGifs( category );\n\n\t// useEffect( () => {\n\t// \tgetGifs( category )\n\t// \t\t.then( setImages );\n\t// }, [ category ]);\n\t\n\treturn (\n\t\t<>\n\t\t\t <h3 className = \"animate__animated animate__fadeInLeft\">{ category }</h3>\n\t\t\t\n\t\t\t{ loading && <p className = \" animate__animated animate__flash\">LOADING</p> }\n\n\t\t\t<div className = \"cardGrid\">\n\t\t\t\t{\n\t\t\t\t\timages.map( img => (\n\t\t\t\t\t\t<GifGridItem \n\t\t\t\t\t\t\tkey = { img.id }\n\t\t\t\t\t\t\t{ ...img }\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true\n\t});\n\n\tuseEffect( () => {\n\n\t\tgetGifs( category )\n\t\t\t.then( imgs => {\n\t\t\t\tsetState({\n\t\t\t\t\tdata: imgs,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t});\n\n\t}, [ category ]);\n\n\t// setTimeout(() => {\n\t// \tsetState({\n\t// \t\tdata: [1,2,3,4,5],\n\t// \t\tloading: false\n\t// \t});\n\t// }, 3000);\n\n\treturn state;\n\n}\n","import React, { useState } from 'react';\nimport { CategoryAdd } from './components/CategoryAdd';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n\tconst [categories, setCategories] = useState(['House MD']);\n\n\t//const handleAdd = () => setCategories( ['Rick And Morty', ...categories] );\n\t//const handleAdd = () => setCategories( catgs => ['Rick And Morty', ...categories] );\n\n\treturn(\n\t\t<>\n\t\t\t<h1>G i f E x p e r t A p p </h1>\n\t\t\t<CategoryAdd setCategories = { setCategories } />\n\t\t\t<hr />\n\n\t\t\t<ol>\n\t\t\t\t{\n\t\t\t\t\tcategories.map( category =>\n\t\t\t\t\t\t<GifGrid\n\t\t\t\t\t\t\tkey = { category } \n\t\t\t\t\t\t\tcategory = { category } \n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</ol>\n\t\t</>\n\t);\n\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}